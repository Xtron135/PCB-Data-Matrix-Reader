# This is a thinking, troubleshooting and drafting flow of the project.
# Basically an unorganized readme. Please refer to Readme for proper reference and documentation.

stackoverflow for Data Matrix reading, square vs round frame:
https://stackoverflow.com/questions/44926316/how-to-locate-and-read-data-matrix-code-with-python

libdmtx documentation. Utility for Data Matrix Read and Write
https://libdmtx.sourceforge.net/
https://github.com/dmtx/libdmtx
http://libdmtx.wikidot.com/general-instructions


https://docs.opencv.org/4.x/d6/d25/tutorial_barcode_detect_and_decode.html

pylibdmtx 
https://pypi.org/project/pylibdmtx/

pip3 install pylibdmtx
pip3 install pillow


roboflow
look in roboflow for dataset for data matrix

https://universe.roboflow.com/tryclofus/dtmx



https://my.cytron.io/tutorial/worker-safety-compliance-monitoring-system-with-raspberry-pi-5

Notes: Use YOLOV5 at max. Raspberry Pi architecture only supports up to YOLOv5. More than that will require more processing power to the level of a supercomputer


pip install numpy --upgrade


pytorch

https://pytorch.org/get-started/locally/


Camera Used:
https://my.cytron.io/p-usb-camera-with-housing-for-raspberry-pi-jetson

pitunnel


https://www.raspberrypi.com/documentation/computers/camera_software.html#use-a-usb-webcam

ffplay -f v4l2 -video_size 640x480 -framerate 30 -i /dev/video0 (Preview Camera)
fswebcam image.jpg

fswebcam -r 640x480 --no-banner /home/pi/yolov5/input/image.jpg

python3 detect.py --weights best.pt --img 640 --conf 0.5 --source /home/pi/yolov5/input/image.jpg --save-crop --project /home/pi/yolov5/output --exist-ok


Error Windows Path:
Edit /yolov5/models/experimental.py
Find attempt_load() function. 
After "from models.yolo" line, add in:

-----

import pathlib
import sys

if sys.platform != 'win!32:
    pathlib.WindowsPath = pathlib.PosixPath

-----


run python code using other python code:
https://www.geeksforgeeks.org/run-one-python-script-from-another-in-python/-



OpenCV data matrix library


Data Matrix total length = 21. 1 letter 20 numbers

Based on AI Model Trained, capable of reading up to 15 cm max, stable. 3000 image trained


Lebar 58 cm
Tinggi 32 cm
Tebal 10 cm

